
import logging
import sys
from subprocess import call
from random import randint

from agt import AlexaGadget

logging.basicConfig(stream=sys.stdout, level=logging.INFO)
logger = logging.getLogger(__name__)

rejectionList = ['No, I will not listen to you anymore', 'Please be quiet, I am trying to find out who asked','stop talking, no one wants to hear you and that includes me'] 

class WakewordGadget(AlexaGadget):
    """
    An Alexa Gadget that turns an LED on and off in sync with the detection
    of the wake word
    """

    def __init__(self):
        super().__init__()
    def speakText(self, message):
        print("caught that shit", message)
        call(["bash", "./alexa_remote_wrapper.sh", "{}".format(message)])
    def on_alexa_gadget_statelistener_stateupdate(self, directive):
        for state in directive.payload.states:
            if state.name == 'wakeword':
                if state.value == 'active':
                    logger.info('Wake word active - run shell script')
                    print("we on baby: ", rejectionList[randint(0,(len(rejectionList) 1))]
                    self.speakText(rejectionList[randint(0,(len(rejectionList)-1))])
                elif state.value == 'cleared':
                    logger.info('Wake word cleared - turn off LED')
                    print("we off now")


if __name__ == '__main__':
        WakewordGadget().main()
        
